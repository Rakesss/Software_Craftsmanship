
------------------------------------------------------------Differences----------------------------------------------

Git Merging:
1) main(1,2,3,4) , feature(2-->1,2,3) 
   after Merging --> main[5-->(mixture of branch main(3,4) + mixture of feature branch(1,2,3)]
2) in large nodes it gets messier to understand which nodes are merged with which one


Git Rebase:
1) main(1,2,3,4) , feature(2-->1,2,3) 
   after Rebasing --> main[the feature nodes are automatically pointed after the last node in the main branch (i.e node:4)]
Structure Looks Like  main[1,2,3,4--->1',2',3']
2) it looks significiently easier as each nodes are been redirected towards the last of the main node then the least newest featured node



--------------------------------------------------------------GIT STASH--------------------------------------------------------

used  to switch between branches ,suppose you are in main branch created one new like feature branch and want to redirect to the older one without commiting any chanages in the featured branch,in these type of situations Git stash is very useful.



-------------------------------------------------------GIT IN COLLABORATION------------------------------------------------------
suppose I created one program and its in stage one I will upload the same in GitHub too,
I have my friend rohan whome I collaborated to work with the same one 
rohan will take the staging code and then make a clone of it and will make changes in it and will upload the stage 2 code in GitHub
the logic of collaborative will now play its role rohan needs to tell me that he has updated the stage 2 code then and then only I can have it on my pc and will be able to make changes


-----------------------------------------------------------TRUNK BAED DEVELOPMENT--------------------------------------
Used for short term feature branch and instantly forwarded to the main/trunk branch